{"version":3,"sources":["webpack://js_project/./js/border.js","webpack://js_project/./js/game.js","webpack://js_project/./js/game_view.js","webpack://js_project/./js/monster.js","webpack://js_project/./js/moving_object.js","webpack://js_project/./js/player.js","webpack://js_project/./js/sprite.js","webpack://js_project/webpack/bootstrap","webpack://js_project/webpack/runtime/define property getters","webpack://js_project/webpack/runtime/hasOwnProperty shorthand","webpack://js_project/webpack/runtime/make namespace object","webpack://js_project/./js/main.js"],"names":["Border","x","y","width","height","type","ctx","fillStyle","fillRect","Game","DIM_X","DIM_Y","keys","upKey","downKey","leftKey","rightKey","attackKey","player","Player","monster","Monster","borders","populateBorders","i","push","handleCollisions","draw","forEach","border","handleGameScreenCollision","handleCollision","step","GameView","canvas","document","getElementById","getContext","game","bindKeyHandlers","setInterval","addEventListener","e","key","vel","maxMoveSpeed","maxRange","current","Math","abs","MovingObject","color","pos","update","jumping","dJumping","facing","motion","attackFrames","attacking","maxFallSpeed","friction","sprite","Sprite","walk","jump","round","attack","letgo","other","spriteWidth","spriteHeight","cols","rows","curFrame","frameCount","srcX","srcY","setupSprites","Image","src","sprites","right","idle","run","fall","left","lastMotion","updateParams","floor","drawImage","console","log","gameview","start"],"mappings":"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","file":"bundle.js","sourcesContent":["export default class Border {\n    constructor(x, y , width, height, type){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.type = type;\n    }\n\n    draw(ctx){\n        if (this.type === 1){\n            ctx.fillStyle = \"green\";\n        }\n        else if ( this.type === 2){\n            ctx. fillStyle = \"brown\"\n        }\n        ctx.fillRect(this.x, this.y, this.width, this.height)\n    }\n}","import MovingObject from \"./moving_object\";\nimport Player from \"./player\";\nimport Monster from \"./monster\";\nimport Border from \"./border\";\n\nexport default class Game{\n    constructor(){\n        this.DIM_X = 1200;\n        this.DIM_Y = 600;\n\n        this.keys = {\n            upKey: false,\n            downKey: false,\n            leftKey: false,\n            rightKey: false,\n            attackKey: false\n        }\n        this.player = new Player(this);\n        this.monster = new Monster(this);\n        this.borders = [];\n        this.populateBorders();\n    }\n\n    populateBorders(){\n        for (let i = 0; i < 12; i++) {\n            this.borders.push(new Border(0 + 100 * i,  this.DIM_Y - 100, 100, 100, 1))\n        }\n    }\n\n    draw(ctx){\n        //background\n        ctx.fillStyle = \"lightblue\";\n        ctx.fillRect(0, 0, 1200, 600);\n\n        this.handleCollisions();\n        //moving object\n        this.player.draw(ctx);\n        this.monster.draw(ctx);\n        //Borders\n        this.borders.forEach( border => {\n\n            border.draw(ctx)\n        });\n\n        //draw circle\n        // ctx.beginPath();\n        // ctx.arc(10, 10, 10, 0, 2 * Math.PI);\n        // ctx.strokeStyle = \"red\";\n        // ctx.stroke();\n        // ctx.fillStyle = \"red\";\n        // ctx.fill();\n    }\n\n    handleCollisions(){\n        this.player.handleGameScreenCollision();\n\n        this.borders.forEach(border => {\n            this.player.handleCollision(border);\n        });\n    }\n\n    step(){\n        this.player.step(); \n        this.monster.step();\n    }\n}","import Game from \"./game\";\n\nexport default class GameView{\n    constructor(){\n        this.canvas = document.getElementById(\"canvas\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.canvas.width = 1200;\n        this.canvas.height = 600;\n        this.game = new Game();\n    }\n\n    start(){\n        this.bindKeyHandlers();\n        setInterval(() => { this.game.step(), this.game.draw(this.ctx);}, 1000/30)\n    }\n\n    bindKeyHandlers() {\n        document.addEventListener(\"keydown\", (e) => {\n            if (e.key === \"w\"){\n                this.game.keys.upKey = true;\n            }\n            else if(e.key === \"a\"){\n                this.game.keys.leftKey = true;\n            }\n            else if(e.key === \"s\"){\n                this.game.keys.downKey = true;\n            }\n            else if(e.key === \"d\"){\n                this.game.keys.rightKey = true;\n            }\n            else if(e.key === \"p\"){\n                this.game.keys.attackKey = true;\n            }\n        })\n\n        document.addEventListener(\"keyup\", (e) => {\n            if (e.key === \"w\"){\n                this.game.keys.upKey = false;\n            }\n            else if(e.key === \"a\"){\n                this.game.keys.leftKey = false;\n            }\n            else if(e.key === \"s\"){\n                this.game.keys.downKey = false;\n            }\n            else if(e.key === \"d\"){\n                this.game.keys.rightKey = false;\n            }\n            else if (e.key === \"p\") {\n                this.game.keys.attackKey = false;\n            }\n        })\n    }\n}","import MovingObject from \"./moving_object\";\n\nexport default class Monster extends MovingObject{\n    constructor(game){\n        super(\n            game.DIM_X  - 60, //x\n            game.DIM_Y - 100 - 110, //y\n            50, //width\n            50, //height\n            \"red\", //color\n            game\n        )\n        this.vel.x = -5\n        this.vel.y = -3\n        this.maxMoveSpeed = 10;\n        this.maxRange = 30;\n        this.current = 0;\n    }\n\n    update(){\n        if( Math.abs(this.current) >= this.maxRange){\n            this.vel.y *= -1;\n        }\n        this.current+= this.vel.y;\n    }\n}","export default class MovingObject{\n    constructor(x, y, width, height, color, game){\n        this.game = game\n        this.width = width;\n        this.height = height;\n        this.vel = {\n            x: 0,\n            y: 0\n        }\n        this.color = color\n        this.pos ={\n            x: x,\n            y: y\n        }\n    }\n\n    update(){\n        \n    }\n\n    step(){\n        this.update();\n        this.pos.x += this.vel.x;\n        this.pos.y += this.vel.y;\n    }\n\n    draw(ctx){\n        ctx.fillStyle = this.color;\n        // console.log(this.pos.x);\n        ctx.fillRect(this.pos.x, this.pos.y, this.width, this.height);\n    }\n}\n\n","import MovingObject from \"./moving_object\";\nimport Sprite from \"./sprite\";\n\nexport default class Player extends MovingObject{\n    constructor(game){\n        super(\n            60 , //x\n            game.DIM_Y - 100 - 110, //y\n            50, //width\n            100, //height\n            \"blue\",\n            game\n        )\n\n        this.jumping = false;\n        this.dJumping = false;\n        this.facing = \"right\";\n        this.motion = \"idle\";\n        this.attackFrames = 0;\n        this.attacking = false;\n        this.maxMoveSpeed = 10;\n        this.maxFallSpeed = 15;\n        this.friction = 0.3;\n        this.sprite = new Sprite();\n    }\n\n    update() {\n        let { upKey, leftKey, rightKey, attackKey } = this.game.keys; //downKey not used\n\n        //Handle Horizontal Movement\n        this.walk(leftKey, rightKey);\n        //jump\n        this.jump(upKey);\n        \n        //gravity\n        this.vel.y <= this.maxFallSpeed ? this.vel.y += 2 : \"\";\n        this.vel.x = Math.round(this.vel.x);\n        this.vel.y = Math.round(this.vel.y);\n        if (this.vel.y > 2) this.motion = \"fall\"\n        //attack\n        this.attack(attackKey);\n\n        //sprite\n        this.sprite.update(this.facing, this.motion);\n    }\n\n    attack(attackKey){\n        this.attackFrames != 0 ? this.attackFrames-- : this.attacking = false;\n        if(attackKey && !this.attacking){\n            this.attacking = true;\n            this.attackFrames = 12;\n        }\n        if (this.attacking){\n            this.motion = \"attack\";\n        }\n    }\n\n    walk(leftKey, rightKey) {\n        if ((!leftKey && !rightKey) || (leftKey && rightKey)) {\n            this.vel.x *= this.friction;\n            if(this.motion !== \"jump\") this.motion = \"idle\";\n            return;\n        }\n        //only if left key is pressed and less than max speed\n        else if (leftKey && this.vel.x > -this.maxMoveSpeed) {\n            this.vel.x -= 1;\n            this.facing = \"left\";\n        }\n        //only if right key is pressed and less than max speed\n        else if (rightKey && this.vel.x < this.maxMoveSpeed) {\n            this.vel.x += 1;\n            this.facing = \"right\";\n        }\n        if (this.motion != 'jump') this.motion = \"run\";\n    }\n\n    jump(upKey) {\n        if (upKey && !this.jumping) {\n            this.vel.y = -25;\n            this.jumping=true;\n            this.motion = \"jump\"\n        }\n        else if(upKey && !this.dJumping && this.letgo){\n            this.vel.y = -25;\n            this.motion = \"jump\"\n            this.dJumping= true\n        }\n        else if (!upKey){\n            this.letgo = true;\n        }\n    }\n\n    handleGameScreenCollision() {\n        if (this.pos.x < 0) this.pos.x = 0;\n        else if (this.pos.x + this.width > this.game.DIM_X) this.pos.x = this.game.DIM_X - this.width;\n        if (this.pos.y < 0) this.pos.y = 0;\n        else if (this.pos.y + this.height > this.game.DIM_Y) this.pos.y = this.game.DIM_Y - this.height;\n    }\n\n    handleCollision(other) {\n        // need to check for intersection\n\n        //Handle placement\n        if (this.pos.y + this.height >= other.y) {\n            this.pos.y = other.y - this.height;\n            this.vel.y = 0;\n            if(this.jumping){ this.motion = \"idle\"}\n            this.jumping = false;\n            this.dJumping = false;\n            this.letgo = false;\n        }\n    }\n\n    draw(ctx) {\n        ctx.fillStyle = \"blue\"\n        // console.log(this.pos.x);\n        ctx.fillRect(this.pos.x, this.pos.y, this.width, this.height);\n        \n        //Sprites WIP\n        this.sprite.draw(ctx, this.pos.x, this.pos.y, this.facing, this.motion)\n    }\n}","export default class Sprite{\n    constructor(){\n        this.spriteWidth = 1280;\n        this.spriteHeight = 110;\n\n        this.cols = 8;\n        this.rows = 1;\n        this.width = this.spriteWidth / this.cols;\n        this.height = this.spriteHeight / this.rows;\n\n        this.curFrame = 0;\n        this.frameCount = 8;\n\n        this.srcX = 0;\n        this.srcY = 0;\n        //this.speed = 12;\n\n        this.setupSprites();\n        this.sprite = new Image();\n        this.sprite.src = \"./assets/RightIdle.png\";\n    }\n\n    setupSprites(){\n        this.sprites = {\n            right: {\n                idle: new Image(),\n                run: new Image(),\n                jump: new Image(),\n                fall: new Image(),\n                attack: new Image()\n            },\n            left: {\n                idle: new Image(),\n                run: new Image(),\n                jump: new Image(),\n                fall: new Image(),\n                attack: new Image()\n            }\n        }\n        this.sprites.right.idle.src = \"./assets/RightIdle.png\";\n        this.sprites.left.idle.src = \"./assets/LeftIdle.png\"\n        this.sprites.right.run.src = \"./assets/RightRun.png\";\n        this.sprites.left.run.src = \"./assets/LeftRun.png\"\n        this.sprites.right.jump.src = \"./assets/RightJump.png\";\n        this.sprites.left.jump.src = \"./assets/LeftJump.png\"\n        this.sprites.right.fall.src = \"./assets/RightFall.png\";\n        this.sprites.left.fall.src = \"./assets/LeftFall.png\"\n        this.sprites.right.attack.src = \"./assets/RightAttack3.png\";\n        this.sprites.left.attack.src = \"./assets/LeftAttack3.png\"\n    }\n\n    updateParams(motion){\n        if (motion === \"attack\") {\n            this.spriteWidth = 640;\n\n            this.cols = 4;\n            this.rows = 1;\n            this.width = this.spriteWidth / this.cols;\n            this.height = this.spriteHeight / this.rows;\n\n            if (this.lastMotion != \"attack\") {this.curFrame = 0}\n            this.curFrame = this.curFrame;\n            this.frameCount = 4;\n\n            this.srcX = 0;\n            this.srcY = 0;\n        }\n        else if (motion === \"jump\" || motion === \"fall\"){\n            this.spriteWidth = 320;\n\n            this.cols = 2;\n            this.rows = 1;\n            this.width = this.spriteWidth / this.cols;\n            this.height = this.spriteHeight / this.rows;\n\n            this.curFrame = this.curFrame > 2 ? 0 : this.curFrame;\n            this.frameCount = 2;\n\n            this.srcX = 0;\n            this.srcY = 0;\n        }\n        else{\n            this.spriteWidth = 1280\n\n            this.cols = 8;\n            this.rows = 1;\n            this.width = this.spriteWidth / this.cols;\n            this.height = this.spriteHeight / this.rows;\n\n            this.curFrame = this.curFrame;\n            this.frameCount = 8;\n\n            this.srcX = 0;\n            this.srcY = 0;  \n        }\n    }\n\n    update(facing, motion){\n        this.updateParams(motion);\n        this.lastMotion = motion;\n        this.curFrame = (this.curFrame + .25) % this.frameCount;\n        if( facing == \"right\"){\n            this.srcX = (Math.floor(this.curFrame)) * (this.width);\n        }\n        else{\n            this.srcX = (this.frameCount - (Math.floor(this.curFrame)) - 1) * (this.width);\n        }\n    }\n\n    draw(ctx, x, y, facing, motion){\n        // ctx.save();\n        // ctx.scale(-1, 1);\n        let sprite = this.sprites[facing][motion];\n        ctx.drawImage(\n            sprite, \n            this.srcX, this.srcY, \n            this.width, this.height,\n            x - 135, y - 110, \n            this.width*2, this.height*2)\n        // ctx.restore()\n        // requestAnimationFrame(draw);\n    }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import MovingObject from \"./moving_object\";\nimport GameView from \"./game_view\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    console.log(\"Webpack is working\")\n\n    let gameview = new GameView();\n\n    gameview.start();\n    // let moving_object = new MovingObject(GAME_WIDTH, GAME_HEIGHT)\n    // moving_object.draw(ctx);\n\n    // ctx.fillStyle = \"blue\"\n    // ctx.fillRect(0, 0, 20, 20)\n})"],"sourceRoot":""}